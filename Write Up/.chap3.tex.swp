\chapter{Current Detection and Prevention Methods}

\section{Prevention through Development}

These web attacks can be significantly damaging to an organization in many ways and so detecting and preventing them is of a very high importance.  These problems are also not limited to only small time websites as well, with many high profile websites already being victim to attacks, and some studies stating that over 90\% of web applications being vulnerable to SQL injections alone. % detection and prevention of SQL injections

The best way to stop these attacks is to prevent the vulnerabilities from existing in the first place on the development side.  Despite the fact that majority of the attacks are well documented and understood, as safeguards are preventions are put in place to protect one aspect of an application, attacks shift their efforts to look for the next weakest link.  From a security standpoint you need to assume that your application is not bulletproof and that you have only mitigated the risk, not removed it completely.  As a result, prevention alone is not enough as there is always the possibility that an attack finds a way past the safe guards and so prevention and detection must work hand in hand.

The simpliest and most common way to prevent these attacks that are at the application layer level of the web application is to never allow user input to be directly concatenated into any command that interacts on the server side.  This is done by making use of what is called prepared statements, you instead construct the entire query or command and then pass in your data from the user as parameters.  This allows the server to distinguish between data and code no matter what kind of input is supplied by the user.  Likewise, whenever data is accessed from storage to be displayed to the user, it should not be directly inserted into a command that could potentially treat it as arbitrary code.  This will prevent issues like stored XSS attacks or RFIs from occuring where stored code is inserted into the flow of the application code.  % OWASP sql injection prevention 
Many languages have different ways of accomplishing this but the most simpliest way is to simply strip the portions that cause it to be interpreted as code, but a more comprehensive way is to filter the HTML against a whitelist. % html purifier

There are other measures that can be taken but these mostly pertain to the environment on which the application is ran on and specifically for SQL injection prevention.  Seperate database users should be made for each application and they should have the least amount of privledge possible.  In the event that something is compromised, that database is at least isolated and other applications are uneffected.  A second measure that can be taken is to use views extensively instead of using direct queries for all database interactions as it allows access to the tables to be denied and only to the specially tailored views.  These strategies embrace the least privledge idea of security, where it is an unnessecary risk to be privy to more information or have more access than you need % owasp sql injection prevention

Research has been done on examing the code of potentially XSS vulnerable applications to determine their vulnerability and was able to accurately detect the vulnerable code with no false positives or negatives.  So it is clear that modifying the code itself to be more safe should always be the first and most important step if it is possible to determine if a particular file is vulnerable that easily, detection is a nessecary backup plan. %XSSDM

\section{Signature Based Detection}

A very traditional way of detecting for security threats is the use of signatures, however many of these signature based tools are more suitable for the lower levels of the OSI model rather than the application and presentation levels. %cite main paper
These tools are referred to as Intrusion Detection Systems (IDS) and rely on regular expressions and other pattern matching tools produced using existing or previous attacks, one example of such a tool is Snort. %cite snort
Therefore, as long as there is an adequate number of signatures that cover the broad spectrum of possible attacks then it can be quite accurate.  

what are the problems with it

other areas that it has failed in, metamorphic viruses


\section{Modern Methods of Detection}

Trend micro
